name: CI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:  # Для ручного запуска

permissions:
  contents: write

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm dpkg cmake build-essential

      - name: Configure CMake
        run: cmake -S . -B build -DCPACK_GENERATOR="DEB;RPM"

      - name: Build
        run: cmake --build build

      - name: Package DEB & RPM
        run: |
          cd build
          cpack -G DEB
          cpack -G RPM

      - name: Upload assets to GitHub Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/*.deb
            build/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install wixtoolset
          refreshenv

      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        run: cmake -S . -B build -DCPACK_GENERATOR=WIX

      - name: Build and Package (WiX)
        run: |
          cd build
          cmake --build .
          cpack

      - name: Check for MSI file
        run: |
          cd build
          dir *.msi

      - name: Upload MSI to GitHub Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos-build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: brew install cmake

      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        run: cmake -S . -B build -DCPACK_GENERATOR="DragNDrop"

      - name: Build
        run: cmake --build build

      - name: Package DMG
        run: |
          cd build
          cpack -G DragNDrop

      - name: List build directory contents
        run: ls -R build

      - name: Upload DMG to GitHub Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
